day25
복습 -> display 속성 -> 시맨틱태그 -> position -> transition/transform -> 고급선택자 -> 반응형 웹 -> 드롭다운메뉴

0. 복습
1) 인라인/블록요소
	인라인요소 : 내용물의 크기만큼만 영역을 차지하고 다른 요소와 같은 줄에 위치할 수 있다
		ex) span, img, a, strong, em,...
	블록요소 : 한줄을 다 차지하므로 다른 요소와 같은 줄에 위치할 수 없다(너비속성이 100%)
		ex) div, h1~h6, p, li, ...

2) id와 class
	id : 특정 태그에 식별가능한 고유한 값을 부여한다
		#id명
	class : 여러 태그를 그룹화한다
		.class명
	
3) box model
	margin	: 바깥여백
		4방향;
		상하 좌우;
		상 좌우 하;
		상 우 하 좌;
	border : 테두리
		굵기 모양 색상;
	padding : 안쪽여백
		4방향;
		상하 좌우;
		상 좌우 하;
		상 우 하 좌;
	contents : 컨텐츠(내용)
		width : 너비;
		height : 높이;
		text-align : center|..;	
	
4) flex box
	flex container	레이아웃을 적용하여 배치하려는 요소들을 감싸고 있는 부모요소
	flex item	실질적으로 배치하려는 요소
	주축		자식요소가 배치되는 방향
	교차축		주축을 가로지르는 방향

	display : flex;		flex container를 지정하는 속성
	flex-direction : row|column;
	justify-content : center | space-between | space-around;
	align-items : center | space-between | space-around;
	flex-wrap : nowra|wrap;

1. display 속성
	HTML에서 요소를 어떻게 표시할지 결정한다
	HTML의 요소들은 기본적으로 display 속성값이 설정되어있다
	블록요소 -> display : block
	인라인요소 -> display : inline
	
1) display 속성의 기본 4가지 값
	none
		요소를 보이지 않게 설정한다
		단순히 투명하게 안보이는 것이아니라 아예 사라지게 되므로 공간을 차지하지 않는다
	block
		블록요소로 설정한다
		기본적으로 가로영역을 모두 차지한다
	inline
		인라인 요소로 설정한다
		기본적으로 컨텐츠의 크기만큼만 영역을 차지한다
		블록요소와 달리 컨텐츠의 너비, 높이를 설정할 수 없다
	inline-block
		인라인 블록 요소로 설정한다
		인라인처럼 컨텐츠만큼만 영역을 차지하지만 블록처럼 컨텐츠의 너비, 높이 설정할 수 있다
		내부는 block요소, 외부는 inline요소의 특징을 갖는다


2. semantic tag(시맨틱 태그)
	태그 자체적으로 의미가 있는 태그

1) 시맨틱 태그의 종류
	<header>	페이지의 헤더영역, 최상단에 위치함
	<footer>	회사 정보등을 담은 푸터영역, 최하단에 위치함
	<nav>		다른 페이지로 이동하는 요소들을 담은 네비게이션 영역
	<main>		주 컨텐츠가 들어가는 영역
	<aside>		주 내용과는 연관성이 낮은 분리된 영역, 주로 사이드바로 사용
	<section>	컨텐츠간 영역을 나눌 때 사용
	<article>	독립되고 반복적으로 재사용가능한 컨텐츠 영역
	...

2. position
	HTML 요소를 배치하는 속성

1) position 속성 값
	static	
		position 속성의 기본 값
		일반적인 흐름으로 배치된다
	relative
		static과 동일하게 배치되지만 relative는 현재 자신의 위치를 기준으로 배치를 변경할 수 있다
		top, right, bottom, left 속성을 사용한다
	absoulte
		일반적인 흐름과 무관하게 배치할 수 있다
		postion:static 이 아닌 부모요소를 기준으로 배치한다
		만약 조상 요소 중 static이 아닌 요소가 없다면 body를 기준으로 배치된다
	fixed
		브라우저 화면상으로 보이는 영역(viewport)에 고정되도록 배치한다
		즉, 스크롤을 해도 고정된다
	sticky
		처음에는 일반적인 흐름에 배치되고 스크롤이 특정 위치에 도달하면 fiexd처럼 화면에 고정된다
		주의사항 : 부모요소에 height가 지정되어있어야만 작동한다!

2) z-index
	요소가 배치될 때 겹치게 된다면 어떤 요소가 위로 올라올 지 순서를 정하는 속성
	기본값은 auto이며 지정하는 값은 1, 10, 100, -1, -100 등의 숫자를 사용한다
	숫자가 높을수록 요소가 앞으로 나오게 된다
	주의사항 : position이 static이 아닌 요소에만 적용된다!!
 
3. transform, transition
1) transform
	요소의 크기 조절, 이동, 회전 효과를 나타낼 때 사용한다
	transform함수를 이용한다
	주의사항:요소의 display 속성이 block 또는 inline-block이어야한다

2) transform 함수
	translate(x, y), translateX(x), translateY(y)
		넘겨준 값 만큼 x, y 좌표 이동
	scale(x, y), scaleX(x), scaleY(y)
		넘겨준 값 만큼 확대, 축소
	rotate(각도deg)
		넘겨준 값만큼 회전

3) transition
	변형에 시간을 설정하여 마치 하나의 애니메이션처럼 표현할 수 있다
	transform과 달리 완전히 다른 스타일로 변경시킬수있따

4) transition 속성
	transition-property : all | none | 속성명
		트랜지션을 적용할 속성을 설정한다
	transition-duration : 시간s
		트랜지션의 진행시간을 설정한다
	transition-timing-function : 속성값
		속성값의 종류
		ease : 천천히-점점빨리-천천히(기본값)
		linear : 시작부터 끝까지 같은 속도로
		ease-in : 느리게 시작
		ease-out : 느리게 끝
		ease-in-out : 느리게 시작해서 느리게 끝
	transition-delay : 시간s
		트랜지션을 바로 시작하지 않고 지연시간을 설정한다
	transition:property | duration | timing-function | delay
		위의 모든 속성을 간편하게 설정할 수 있다

4. 고급선택자
1) 연결선택자
- 하위 선택자
	상위요소 하위요소{}
	상위 요소에 포함된 모든 하위요소를 선택한다
	자식을 포함한 모든 자손이 선택된다

- 자식 선택자
	부모요소 > 자식요소{}
	부모요소 바로 아래에 속한 자식 요소를 선택한다

- 인접형제선택자
	요소1+요소2

- 형제선택자
	요소1~요소2

2) 속성 선택자
- 선택자[속성]
- 선택자[속성=속성값]
	특정 속성을 가진 요소를 선택한다

3) 가상 선택자
- 가상 클래스
	선택자:가상클래스 {}
		실제 존재하는 요소의 특정 상태에 따라 css를 주고싶을 때 사용
	link 	href 속성을 가진 태그 중 아직 방문하지 않은 상태
	visited 이미 방문한 상태
	hover	사용자가 마우스를 올린 상태
	focus	입력가능한 칸을 선택한 상태
	nth-child	형제 중 순서로 선택한다
	not(선택자)	해당 선택자를 제외하고 선택한다

- 가상요소
	선택자::가상요소{}
		요소의 특정 부분에 스타일을 지정하거나 새로운 요소를 삽입하기 위해 사용한다
	first-letter 	첫글자만 선택(블록 요소에만 가능)
	first-line	첫줄만 선택(블록요소에만 가능)
	before		선택한 요소의 컨텐츠 앞에 다른 요소 삽입
	after		선택한 요소의 컨텐츠 뒤에 다른 요소 삽입





























		